%% Cleanup ---------------------------------------------------------------------
clearvars; close all; clc;

%% Parameters ------------------------------------------------------------------
options = struct();
options.save_plot = true;
options.colors = [ ...
    "#0072BD";
    "#D95319";
];

Fs = 400;
n_photons = 1600;

options.plot_folder = fullfile("figures", "extra_chirp_disturbance");

%% Load required libraries -----------------------------------------------------
MATLAB_environment_setup();

%% Generate datafiles if not available -----------------------------------------
for type = "chirp"
    for readout_noise = [true, false]
        % Unknown
        utility_functions.extra_disturbance_study(...
            "design_extra", "none", ...
            "sim_extra", type, ...
            "readout_noise", readout_noise);
        % Known
        utility_functions.extra_disturbance_study(...
            "design_extra", type, ...
            "sim_extra", type, ...
            "readout_noise", readout_noise);
        % Wrong
        utility_functions.extra_disturbance_study(...
            "design_extra", type, ...
            "sim_extra", "none", ...
            "readout_noise", readout_noise);
    end
end

%% Plot ------------------------------------------------------------------------
for extra_type = "chirp"
    for study_type = ["unknown_disturbance", "known_disturbance", "wrong_disturbance"]
        datafile_no_readout = fullfile( ...
            "data", ...
            "no_readout", ...
            "extra_disturbance_study", ...
            study_type, ...
            extra_type, ...
            sprintf("%04d_Hz", Fs), ...
            sprintf("%04d_photons.mat", n_photons));
        datafile_no_readout = load(datafile_no_readout);
        
        datafile_readout = fullfile( ...
            "data", ...
            "readout", ...
            "extra_disturbance_study", ...
            study_type, ...
            extra_type, ...
            sprintf("%04d_Hz", Fs), ...
            sprintf("%04d_photons.mat", n_photons));
        datafile_readout = load(datafile_readout);

        plot_helper_chirp(datafile_no_readout, datafile_readout, study_type, options);
    end
end

%% Cleanup ---------------------------------------------------------------------
if options.save_plot
    clearvars; close all; clc;
end

%% Helper Functions ------------------------------------------------------------
function plot_helper_chirp(dataset_no_readout, dataset_readout, study_type, options)
    %% Data Manipulation -------------------------------------------------------
    mag_space = unique(dataset_readout.extra_space(:, 1));

    gain_no_readout = arrayfun(@(x) x.tip.int.total, dataset_no_readout.rms_data) ./ ...
        arrayfun(@(x) x.tip.data.total, dataset_no_readout.rms_data) * 100 - 100;

    gain_readout = arrayfun(@(x) x.tip.int.total, dataset_readout.rms_data) ./ ...
        arrayfun(@(x) x.tip.data.total, dataset_readout.rms_data) * 100 - 100;

    %% Plot --------------------------------------------------------------------
    fig = figure();
    if options.save_plot
        fig.Renderer = "painters";
        fig.Units = "centimeters";
        fig.PaperSize = fig.Position(3:4);
        fig.PaperUnits = "normalized";
        fig.PaperPosition = [0, 0, 1, 1];
    end

    t = tiledlayout(1, 1, "TileSpacing", "compact", "Padding", "compact");
    ylabel(t, "Performance Gain/Loss [%]");
    xlabel(t, "Chirp disturbance RMS [mas]");
    title(t, regexprep(...
        lower(replace(study_type, "_", " ")), ...
        "(^|\.)\s*.", ...
        "${upper($0)}"));

    ax = nexttile();    
    hold on; grid on; box on;

    h_readout = plot(mag_space, gain_readout, ...
        "LineStyle", "-", ...
        "LineWidth", 2, ...
        "Marker", ".", ...
        "MarkerSize", 25, ...
        "Color", options.colors(1));
    h_no_readout = plot(mag_space, gain_no_readout, ...
        "LineStyle", "-", ...
        "LineWidth", 2, ...
        "Marker", ".", ...
        "MarkerSize", 25, ...
        "Color", options.colors(2));

    xticks(mag_space);
    xlim([mag_space(1), mag_space(end)]);

    h_leg = legend([h_no_readout, h_readout], ...
        "$0 ~ e^{-} ~ \textrm{per pixel}$", ...
        "$3 ~ e^{-} ~ \textrm{per pixel}$", ...
        "FontSize", 12, ...
        "Interpreter", "latex", ...
        "Orientation", "vertical", ...
        "Location", "southeast");
    title(h_leg, "\textrm{Readout Noise Level}")

    if options.save_plot
        if ~isfolder(options.plot_folder)
            mkdir(options.plot_folder)
        end
        plot_filename = fullfile( ...
            options.plot_folder, ...
            sprintf("%s", replace(study_type, "_disturbance", "")) ...
        );
        print(fig, plot_filename, "-dpng", "-painters", "-r300");
        print(fig, plot_filename, "-dpdf", "-painters");

        fig.Color = "none";
        fig.InvertHardcopy = "off";
        print(fig, plot_filename, "-dsvg", "-painters");
        close(fig);
    end
end